import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/app/routes/counter.tsx?client-route=1");import RefreshRuntime from "/@id/__x00__virtual:remix/hmr-runtime";const inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;let prevRefreshReg;let prevRefreshSig;if (import.meta.hot && !inWebWorker) {  if (!window.__vite_plugin_react_preamble_installed__) {    throw new Error(      "Remix Vite plugin can't detect preamble. Something is wrong."    );  }  prevRefreshReg = window.$RefreshReg$;  prevRefreshSig = window.$RefreshSig$;  window.$RefreshReg$ = (type, id) => {    RefreshRuntime.register(type, "/Users/machine/dev/crypto/panoptic/remix-vite-template/app/routes/counter.tsx?client-route=1" + " " + id)  };  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;}export { default } from "/app/routes/counter.tsx";
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("/Users/machine/dev/crypto/panoptic/remix-vite-template/app/routes/counter.tsx?client-route=1", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      undefined && window.__remixRouteModuleUpdates.set(undefined, nextExports);
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports, ["clientAction","clientLoader","handle","meta","links","shouldRevalidate"]);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdW50ZXIudHN4P2NsaWVudC1yb3V0ZT0xIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzb24sIHJlZGlyZWN0IH0gZnJvbSAnQHJlbWl4LXJ1bi9ub2RlJ1xuaW1wb3J0IHsgRm9ybSwgdXNlTG9hZGVyRGF0YSB9IGZyb20gJ0ByZW1peC1ydW4vcmVhY3QnXG5pbXBvcnQgeyBkYiB9IGZyb20gJ34vdXRpbHMvZGIuc2VydmVyJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZGVyKCkge1xuICByZXR1cm4ganNvbih7IGNvdW50OiBhd2FpdCBkYi5nZXRDb3VudCgpIH0pXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhY3Rpb24oKSB7XG4gIGF3YWl0IGRiLmluY3JlbWVudCgpXG4gIHJldHVybiByZWRpcmVjdCgnL2NvdW50ZXInKVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3VudGVyKCkge1xuICBjb25zdCBkYXRhID0gdXNlTG9hZGVyRGF0YTx0eXBlb2YgbG9hZGVyPigpXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtLThcIj5cbiAgICAgIDxGb3JtIG1ldGhvZD1cInBvc3RcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzTmFtZT1cInJvdW5kZWQtbWQgYmctcmVkLTUwMCBweC00IHB5LTIgdGV4dC13aGl0ZVwiXG4gICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgID5cbiAgICAgICAgICBDb3VudDoge2RhdGEuY291bnR9XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9Gb3JtPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibWFwcGluZ3MiOiJBQWtCUTtBQWxCUixTQUFTLE1BQU0sZ0JBQWdCO0FBQy9CLFNBQVMsTUFBTSxxQkFBcUI7QUFDcEMsU0FBUyxVQUFVO0FBRW5CLHNCQUFzQixTQUFTO0FBQzdCLFNBQU8sS0FBSyxFQUFFLE9BQU8sTUFBTSxHQUFHLFNBQVMsRUFBRSxDQUFDO0FBQzVDO0FBRUEsc0JBQXNCLFNBQVM7QUFDN0IsUUFBTSxHQUFHLFVBQVU7QUFDbkIsU0FBTyxTQUFTLFVBQVU7QUFDNUI7QUFFQSx3QkFBd0IsVUFBVTtBQUNoQyxRQUFNLE9BQU8sY0FBNkI7QUFDMUMsU0FDRSx1QkFBQyxTQUFJLFdBQVUsT0FDYixpQ0FBQyxRQUFLLFFBQU8sUUFDWDtBQUFBLElBQUM7QUFBQTtBQUFBLE1BQ0MsV0FBVTtBQUFBLE1BQ1YsTUFBSztBQUFBLE1BQ047QUFBQTtBQUFBLFFBQ1MsS0FBSztBQUFBO0FBQUE7QUFBQSxJQUpmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLEtBTkY7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQU9BLEtBUkY7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQVNBO0FBRUo7IiwibmFtZXMiOltdfQ==